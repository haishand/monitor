<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="po.Device">
    <id column="code" jdbcType="INTEGER" property="code" />
    <result column="deviceId" jdbcType="INTEGER" property="deviceid" />
    <result column="nodeId" jdbcType="INTEGER" property="nodeid" />
    <result column="multiFlag" jdbcType="BIT" property="multiflag" />
    <result column="deviceName" jdbcType="VARCHAR" property="devicename" />
    <result column="deviceType" jdbcType="INTEGER" property="devicetype" />
    <result column="param1Name" jdbcType="VARCHAR" property="param1name" />
    <result column="param2Name" jdbcType="VARCHAR" property="param2name" />
    <result column="saveInterval" jdbcType="INTEGER" property="saveinterval" />
    <result column="lowAlarmLimit1" jdbcType="REAL" property="lowalarmlimit1" />
    <result column="hiAlarmLimit1" jdbcType="REAL" property="hialarmlimit1" />
    <result column="lowAlarmLimit2" jdbcType="REAL" property="lowalarmlimit2" />
    <result column="hiAlarmLimit2" jdbcType="REAL" property="hialarmlimit2" />
    <result column="onlineStatus" jdbcType="INTEGER" property="onlinestatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    code, deviceId, nodeId, multiFlag, deviceName, deviceType, param1Name, param2Name, 
    saveInterval, lowAlarmLimit1, hiAlarmLimit1, lowAlarmLimit2, hiAlarmLimit2, onlineStatus
  </sql>
  <select id="selectByExample" parameterType="po.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where code = #{code,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where code = #{code,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.DeviceExample">
    delete from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Device">
    insert into device (code, deviceId, nodeId, 
      multiFlag, deviceName, deviceType, 
      param1Name, param2Name, saveInterval, 
      lowAlarmLimit1, hiAlarmLimit1, lowAlarmLimit2, 
      hiAlarmLimit2, onlineStatus)
    values (#{code,jdbcType=INTEGER}, #{deviceid,jdbcType=INTEGER}, #{nodeid,jdbcType=INTEGER}, 
      #{multiflag,jdbcType=BIT}, #{devicename,jdbcType=VARCHAR}, #{devicetype,jdbcType=INTEGER}, 
      #{param1name,jdbcType=VARCHAR}, #{param2name,jdbcType=VARCHAR}, #{saveinterval,jdbcType=INTEGER}, 
      #{lowalarmlimit1,jdbcType=REAL}, #{hialarmlimit1,jdbcType=REAL}, #{lowalarmlimit2,jdbcType=REAL}, 
      #{hialarmlimit2,jdbcType=REAL}, #{onlinestatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="deviceid != null">
        deviceId,
      </if>
      <if test="nodeid != null">
        nodeId,
      </if>
      <if test="multiflag != null">
        multiFlag,
      </if>
      <if test="devicename != null">
        deviceName,
      </if>
      <if test="devicetype != null">
        deviceType,
      </if>
      <if test="param1name != null">
        param1Name,
      </if>
      <if test="param2name != null">
        param2Name,
      </if>
      <if test="saveinterval != null">
        saveInterval,
      </if>
      <if test="lowalarmlimit1 != null">
        lowAlarmLimit1,
      </if>
      <if test="hialarmlimit1 != null">
        hiAlarmLimit1,
      </if>
      <if test="lowalarmlimit2 != null">
        lowAlarmLimit2,
      </if>
      <if test="hialarmlimit2 != null">
        hiAlarmLimit2,
      </if>
      <if test="onlinestatus != null">
        onlineStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="deviceid != null">
        #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        #{nodeid,jdbcType=INTEGER},
      </if>
      <if test="multiflag != null">
        #{multiflag,jdbcType=BIT},
      </if>
      <if test="devicename != null">
        #{devicename,jdbcType=VARCHAR},
      </if>
      <if test="devicetype != null">
        #{devicetype,jdbcType=INTEGER},
      </if>
      <if test="param1name != null">
        #{param1name,jdbcType=VARCHAR},
      </if>
      <if test="param2name != null">
        #{param2name,jdbcType=VARCHAR},
      </if>
      <if test="saveinterval != null">
        #{saveinterval,jdbcType=INTEGER},
      </if>
      <if test="lowalarmlimit1 != null">
        #{lowalarmlimit1,jdbcType=REAL},
      </if>
      <if test="hialarmlimit1 != null">
        #{hialarmlimit1,jdbcType=REAL},
      </if>
      <if test="lowalarmlimit2 != null">
        #{lowalarmlimit2,jdbcType=REAL},
      </if>
      <if test="hialarmlimit2 != null">
        #{hialarmlimit2,jdbcType=REAL},
      </if>
      <if test="onlinestatus != null">
        #{onlinestatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.DeviceExample" resultType="java.lang.Long">
    select count(*) from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.deviceid != null">
        deviceId = #{record.deviceid,jdbcType=INTEGER},
      </if>
      <if test="record.nodeid != null">
        nodeId = #{record.nodeid,jdbcType=INTEGER},
      </if>
      <if test="record.multiflag != null">
        multiFlag = #{record.multiflag,jdbcType=BIT},
      </if>
      <if test="record.devicename != null">
        deviceName = #{record.devicename,jdbcType=VARCHAR},
      </if>
      <if test="record.devicetype != null">
        deviceType = #{record.devicetype,jdbcType=INTEGER},
      </if>
      <if test="record.param1name != null">
        param1Name = #{record.param1name,jdbcType=VARCHAR},
      </if>
      <if test="record.param2name != null">
        param2Name = #{record.param2name,jdbcType=VARCHAR},
      </if>
      <if test="record.saveinterval != null">
        saveInterval = #{record.saveinterval,jdbcType=INTEGER},
      </if>
      <if test="record.lowalarmlimit1 != null">
        lowAlarmLimit1 = #{record.lowalarmlimit1,jdbcType=REAL},
      </if>
      <if test="record.hialarmlimit1 != null">
        hiAlarmLimit1 = #{record.hialarmlimit1,jdbcType=REAL},
      </if>
      <if test="record.lowalarmlimit2 != null">
        lowAlarmLimit2 = #{record.lowalarmlimit2,jdbcType=REAL},
      </if>
      <if test="record.hialarmlimit2 != null">
        hiAlarmLimit2 = #{record.hialarmlimit2,jdbcType=REAL},
      </if>
      <if test="record.onlinestatus != null">
        onlineStatus = #{record.onlinestatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device
    set code = #{record.code,jdbcType=INTEGER},
      deviceId = #{record.deviceid,jdbcType=INTEGER},
      nodeId = #{record.nodeid,jdbcType=INTEGER},
      multiFlag = #{record.multiflag,jdbcType=BIT},
      deviceName = #{record.devicename,jdbcType=VARCHAR},
      deviceType = #{record.devicetype,jdbcType=INTEGER},
      param1Name = #{record.param1name,jdbcType=VARCHAR},
      param2Name = #{record.param2name,jdbcType=VARCHAR},
      saveInterval = #{record.saveinterval,jdbcType=INTEGER},
      lowAlarmLimit1 = #{record.lowalarmlimit1,jdbcType=REAL},
      hiAlarmLimit1 = #{record.hialarmlimit1,jdbcType=REAL},
      lowAlarmLimit2 = #{record.lowalarmlimit2,jdbcType=REAL},
      hiAlarmLimit2 = #{record.hialarmlimit2,jdbcType=REAL},
      onlineStatus = #{record.onlinestatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Device">
    update device
    <set>
      <if test="deviceid != null">
        deviceId = #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="nodeid != null">
        nodeId = #{nodeid,jdbcType=INTEGER},
      </if>
      <if test="multiflag != null">
        multiFlag = #{multiflag,jdbcType=BIT},
      </if>
      <if test="devicename != null">
        deviceName = #{devicename,jdbcType=VARCHAR},
      </if>
      <if test="devicetype != null">
        deviceType = #{devicetype,jdbcType=INTEGER},
      </if>
      <if test="param1name != null">
        param1Name = #{param1name,jdbcType=VARCHAR},
      </if>
      <if test="param2name != null">
        param2Name = #{param2name,jdbcType=VARCHAR},
      </if>
      <if test="saveinterval != null">
        saveInterval = #{saveinterval,jdbcType=INTEGER},
      </if>
      <if test="lowalarmlimit1 != null">
        lowAlarmLimit1 = #{lowalarmlimit1,jdbcType=REAL},
      </if>
      <if test="hialarmlimit1 != null">
        hiAlarmLimit1 = #{hialarmlimit1,jdbcType=REAL},
      </if>
      <if test="lowalarmlimit2 != null">
        lowAlarmLimit2 = #{lowalarmlimit2,jdbcType=REAL},
      </if>
      <if test="hialarmlimit2 != null">
        hiAlarmLimit2 = #{hialarmlimit2,jdbcType=REAL},
      </if>
      <if test="onlinestatus != null">
        onlineStatus = #{onlinestatus,jdbcType=INTEGER},
      </if>
    </set>
    where code = #{code,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Device">
    update device
    set deviceId = #{deviceid,jdbcType=INTEGER},
      nodeId = #{nodeid,jdbcType=INTEGER},
      multiFlag = #{multiflag,jdbcType=BIT},
      deviceName = #{devicename,jdbcType=VARCHAR},
      deviceType = #{devicetype,jdbcType=INTEGER},
      param1Name = #{param1name,jdbcType=VARCHAR},
      param2Name = #{param2name,jdbcType=VARCHAR},
      saveInterval = #{saveinterval,jdbcType=INTEGER},
      lowAlarmLimit1 = #{lowalarmlimit1,jdbcType=REAL},
      hiAlarmLimit1 = #{hialarmlimit1,jdbcType=REAL},
      lowAlarmLimit2 = #{lowalarmlimit2,jdbcType=REAL},
      hiAlarmLimit2 = #{hialarmlimit2,jdbcType=REAL},
      onlineStatus = #{onlinestatus,jdbcType=INTEGER}
    where code = #{code,jdbcType=INTEGER}
  </update>
</mapper>