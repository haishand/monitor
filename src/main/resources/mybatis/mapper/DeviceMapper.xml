<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="po.Device">
    <id column="code" jdbcType="INTEGER" property="code" />
    <result column="deviceId" jdbcType="INTEGER" property="deviceId" />
    <result column="nodeId" jdbcType="INTEGER" property="nodeId" />
    <result column="multiFlag" jdbcType="BIT" property="multiFlag" />
    <result column="deviceName" jdbcType="VARCHAR" property="deviceName" />
    <result column="deviceType" jdbcType="INTEGER" property="deviceType" />
    <result column="param1Name" jdbcType="VARCHAR" property="param1Name" />
    <result column="param2Name" jdbcType="VARCHAR" property="param2Name" />
    <result column="saveInterval" jdbcType="INTEGER" property="saveInterval" />
    <result column="lowAlarmLimit1" jdbcType="REAL" property="lowAlarmLimit1" />
    <result column="hiAlarmLimit1" jdbcType="REAL" property="hiAlarmLimit1" />
    <result column="lowAlarmLimit2" jdbcType="REAL" property="lowAlarmLimit2" />
    <result column="hiAlarmLimit2" jdbcType="REAL" property="hiAlarmLimit2" />
    <result column="onlineStatus" jdbcType="INTEGER" property="onlineStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    code, deviceId, nodeId, multiFlag, deviceName, deviceType, param1Name, param2Name, 
    saveInterval, lowAlarmLimit1, hiAlarmLimit1, lowAlarmLimit2, hiAlarmLimit2, onlineStatus
  </sql>
  <select id="selectByExample" parameterType="po.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where code = #{code,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where code = #{code,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.DeviceExample">
    delete from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Device">
    insert into device (code, deviceId, nodeId, 
      multiFlag, deviceName, deviceType, 
      param1Name, param2Name, saveInterval, 
      lowAlarmLimit1, hiAlarmLimit1, lowAlarmLimit2, 
      hiAlarmLimit2, onlineStatus)
    values (#{code,jdbcType=INTEGER}, #{deviceId,jdbcType=INTEGER}, #{nodeId,jdbcType=INTEGER}, 
      #{multiFlag,jdbcType=BIT}, #{deviceName,jdbcType=VARCHAR}, #{deviceType,jdbcType=INTEGER}, 
      #{param1Name,jdbcType=VARCHAR}, #{param2Name,jdbcType=VARCHAR}, #{saveInterval,jdbcType=INTEGER}, 
      #{lowAlarmLimit1,jdbcType=REAL}, #{hiAlarmLimit1,jdbcType=REAL}, #{lowAlarmLimit2,jdbcType=REAL}, 
      #{hiAlarmLimit2,jdbcType=REAL}, #{onlineStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="deviceId != null">
        deviceId,
      </if>
      <if test="nodeId != null">
        nodeId,
      </if>
      <if test="multiFlag != null">
        multiFlag,
      </if>
      <if test="deviceName != null">
        deviceName,
      </if>
      <if test="deviceType != null">
        deviceType,
      </if>
      <if test="param1Name != null">
        param1Name,
      </if>
      <if test="param2Name != null">
        param2Name,
      </if>
      <if test="saveInterval != null">
        saveInterval,
      </if>
      <if test="lowAlarmLimit1 != null">
        lowAlarmLimit1,
      </if>
      <if test="hiAlarmLimit1 != null">
        hiAlarmLimit1,
      </if>
      <if test="lowAlarmLimit2 != null">
        lowAlarmLimit2,
      </if>
      <if test="hiAlarmLimit2 != null">
        hiAlarmLimit2,
      </if>
      <if test="onlineStatus != null">
        onlineStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="multiFlag != null">
        #{multiFlag,jdbcType=BIT},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="param1Name != null">
        #{param1Name,jdbcType=VARCHAR},
      </if>
      <if test="param2Name != null">
        #{param2Name,jdbcType=VARCHAR},
      </if>
      <if test="saveInterval != null">
        #{saveInterval,jdbcType=INTEGER},
      </if>
      <if test="lowAlarmLimit1 != null">
        #{lowAlarmLimit1,jdbcType=REAL},
      </if>
      <if test="hiAlarmLimit1 != null">
        #{hiAlarmLimit1,jdbcType=REAL},
      </if>
      <if test="lowAlarmLimit2 != null">
        #{lowAlarmLimit2,jdbcType=REAL},
      </if>
      <if test="hiAlarmLimit2 != null">
        #{hiAlarmLimit2,jdbcType=REAL},
      </if>
      <if test="onlineStatus != null">
        #{onlineStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.DeviceExample" resultType="java.lang.Long">
    select count(*) from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null">
        deviceId = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.nodeId != null">
        nodeId = #{record.nodeId,jdbcType=INTEGER},
      </if>
      <if test="record.multiFlag != null">
        multiFlag = #{record.multiFlag,jdbcType=BIT},
      </if>
      <if test="record.deviceName != null">
        deviceName = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        deviceType = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.param1Name != null">
        param1Name = #{record.param1Name,jdbcType=VARCHAR},
      </if>
      <if test="record.param2Name != null">
        param2Name = #{record.param2Name,jdbcType=VARCHAR},
      </if>
      <if test="record.saveInterval != null">
        saveInterval = #{record.saveInterval,jdbcType=INTEGER},
      </if>
      <if test="record.lowAlarmLimit1 != null">
        lowAlarmLimit1 = #{record.lowAlarmLimit1,jdbcType=REAL},
      </if>
      <if test="record.hiAlarmLimit1 != null">
        hiAlarmLimit1 = #{record.hiAlarmLimit1,jdbcType=REAL},
      </if>
      <if test="record.lowAlarmLimit2 != null">
        lowAlarmLimit2 = #{record.lowAlarmLimit2,jdbcType=REAL},
      </if>
      <if test="record.hiAlarmLimit2 != null">
        hiAlarmLimit2 = #{record.hiAlarmLimit2,jdbcType=REAL},
      </if>
      <if test="record.onlineStatus != null">
        onlineStatus = #{record.onlineStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device
    set code = #{record.code,jdbcType=INTEGER},
      deviceId = #{record.deviceId,jdbcType=INTEGER},
      nodeId = #{record.nodeId,jdbcType=INTEGER},
      multiFlag = #{record.multiFlag,jdbcType=BIT},
      deviceName = #{record.deviceName,jdbcType=VARCHAR},
      deviceType = #{record.deviceType,jdbcType=INTEGER},
      param1Name = #{record.param1Name,jdbcType=VARCHAR},
      param2Name = #{record.param2Name,jdbcType=VARCHAR},
      saveInterval = #{record.saveInterval,jdbcType=INTEGER},
      lowAlarmLimit1 = #{record.lowAlarmLimit1,jdbcType=REAL},
      hiAlarmLimit1 = #{record.hiAlarmLimit1,jdbcType=REAL},
      lowAlarmLimit2 = #{record.lowAlarmLimit2,jdbcType=REAL},
      hiAlarmLimit2 = #{record.hiAlarmLimit2,jdbcType=REAL},
      onlineStatus = #{record.onlineStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Device">
    update device
    <set>
      <if test="deviceId != null">
        deviceId = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        nodeId = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="multiFlag != null">
        multiFlag = #{multiFlag,jdbcType=BIT},
      </if>
      <if test="deviceName != null">
        deviceName = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        deviceType = #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="param1Name != null">
        param1Name = #{param1Name,jdbcType=VARCHAR},
      </if>
      <if test="param2Name != null">
        param2Name = #{param2Name,jdbcType=VARCHAR},
      </if>
      <if test="saveInterval != null">
        saveInterval = #{saveInterval,jdbcType=INTEGER},
      </if>
      <if test="lowAlarmLimit1 != null">
        lowAlarmLimit1 = #{lowAlarmLimit1,jdbcType=REAL},
      </if>
      <if test="hiAlarmLimit1 != null">
        hiAlarmLimit1 = #{hiAlarmLimit1,jdbcType=REAL},
      </if>
      <if test="lowAlarmLimit2 != null">
        lowAlarmLimit2 = #{lowAlarmLimit2,jdbcType=REAL},
      </if>
      <if test="hiAlarmLimit2 != null">
        hiAlarmLimit2 = #{hiAlarmLimit2,jdbcType=REAL},
      </if>
      <if test="onlineStatus != null">
        onlineStatus = #{onlineStatus,jdbcType=INTEGER},
      </if>
    </set>
    where code = #{code,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Device">
    update device
    set deviceId = #{deviceId,jdbcType=INTEGER},
      nodeId = #{nodeId,jdbcType=INTEGER},
      multiFlag = #{multiFlag,jdbcType=BIT},
      deviceName = #{deviceName,jdbcType=VARCHAR},
      deviceType = #{deviceType,jdbcType=INTEGER},
      param1Name = #{param1Name,jdbcType=VARCHAR},
      param2Name = #{param2Name,jdbcType=VARCHAR},
      saveInterval = #{saveInterval,jdbcType=INTEGER},
      lowAlarmLimit1 = #{lowAlarmLimit1,jdbcType=REAL},
      hiAlarmLimit1 = #{hiAlarmLimit1,jdbcType=REAL},
      lowAlarmLimit2 = #{lowAlarmLimit2,jdbcType=REAL},
      hiAlarmLimit2 = #{hiAlarmLimit2,jdbcType=REAL},
      onlineStatus = #{onlineStatus,jdbcType=INTEGER}
    where code = #{code,jdbcType=INTEGER}
  </update>
</mapper>